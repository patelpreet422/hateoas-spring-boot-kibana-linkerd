plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'

	compileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.modelmapper:modelmapper:2.4.4'

	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	// loki appender
	implementation 'com.github.loki4j:loki-logback-appender:1.4.1'

	// dependency to generate traceId and spanId
	implementation 'io.micrometer:micrometer-tracing-bridge-brave'

	// dependency to start zipkin reporter
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'

	// dependency to export application metric for prometheus
	implementation 'io.micrometer:micrometer-registry-prometheus'

	// using logstack encoder for writing logs in logstash specific format
	implementation 'net.logstash.logback:logstash-logback-encoder:6.6'

	// adding swagger ui
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

}

tasks.named('test') {
	useJUnitPlatform()
}
